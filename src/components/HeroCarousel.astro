---
import { siteData } from '../data/site.ts';
---

<section class="relative w-full h-[70vh] md:h-[80vh] min-h-[520px] overflow-hidden">
  <!-- Carousel Container -->
  <div class="carousel-container relative w-full h-full">
    {siteData.banners.map((banner, index) => (
      <div 
        class={`carousel-slide absolute inset-0 w-full h-full transition-opacity duration-1000 ease-in-out ${
          index === 0 ? 'opacity-100 z-10' : 'opacity-0 z-0'
        }`}
        data-slide={index}
      >
        <!-- Background Image with Effects -->
        <div class="absolute inset-0 bg-gradient-to-r from-neutral-dark/70 via-neutral-dark/50 to-transparent z-10"></div>
        <div 
          class="absolute inset-0 bg-cover bg-center bg-no-repeat transform scale-105 transition-transform duration-[8000ms] ease-out hover:scale-110"
          style={`background-image: url('${banner.image}'); background-attachment: fixed;`}
        ></div>
        <!-- Overlay with gradient for better text readability -->
        <div class="absolute inset-0 bg-gradient-to-br from-primary-blue/40 via-transparent to-primary-green/30 z-5"></div>
        
        <!-- Content -->
        <div class="relative z-20 flex items-center h-full">
          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full">
            <div class="max-w-3xl">
              <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white leading-tight mb-6">
                {banner.title}
              </h1>
              <p class="text-lg sm:text-xl md:text-2xl text-gray-200 mb-8 leading-relaxed">
                {banner.subtitle}
              </p>
              <div class="flex flex-col sm:flex-row gap-4">
                <a 
                  href={banner.link}
                  class="inline-flex items-center justify-center px-8 py-4 bg-accent-amber hover:bg-yellow-500 text-neutral-dark font-bold rounded-2xl transition-all duration-200 shadow-xl hover:shadow-2xl transform hover:-translate-y-1 text-center"
                >
                  {banner.cta}
                  <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                  </svg>
                </a>
                <a 
                  href={`https://wa.me/${siteData.company.whatsapp}?text=Olá! Vi o banner "${banner.title}" e gostaria de saber mais.`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center justify-center px-8 py-4 bg-transparent border-2 border-white text-white hover:bg-white hover:text-neutral-dark font-semibold rounded-2xl transition-all duration-200 text-center"
                >
                  <svg class="mr-2 w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
                  </svg>
                  Falar no WhatsApp
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Navigation Dots -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-30">
    <div class="flex space-x-3">
      {siteData.banners.map((_, index) => (
        <button 
          class={`carousel-dot w-3 h-3 rounded-full transition-all duration-300 ${
            index === 0 
              ? 'bg-accent-amber shadow-lg scale-125' 
              : 'bg-white/50 hover:bg-white/75'
          }`}
          data-slide={index}
          aria-label={`Ir para slide ${index + 1}`}
        ></button>
      ))}
    </div>
  </div>

  <!-- Navigation Arrows - Hidden on Mobile -->
  <div class="absolute inset-y-0 left-0 flex items-center z-30 hidden md:flex">
    <button 
      class="carousel-prev ml-4 p-3 bg-white/20 hover:bg-white/30 text-white rounded-full transition-all duration-200 backdrop-blur-sm"
      aria-label="Slide anterior"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
    </button>
  </div>
  
  <div class="absolute inset-y-0 right-0 flex items-center z-30 hidden md:flex">
    <button 
      class="carousel-next mr-4 p-3 bg-white/20 hover:bg-white/30 text-white rounded-full transition-all duration-200 backdrop-blur-sm"
      aria-label="Próximo slide"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </button>
  </div>


</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const slides = document.querySelectorAll('.carousel-slide');
    const dots = document.querySelectorAll('.carousel-dot');
    const prevButton = document.querySelector('.carousel-prev');
    const nextButton = document.querySelector('.carousel-next');
    const container = document.querySelector('.carousel-container');
    
    let currentSlide = 0;
    let autoPlayInterval: number;
    let isAutoPlaying = true;

    function showSlide(index: number) {
      // Hide all slides
      slides.forEach((slide, i) => {
        slide.classList.remove('opacity-100', 'z-10');
        slide.classList.add('opacity-0', 'z-0');
      });
      
      // Show current slide
      if (slides[index]) {
        slides[index].classList.remove('opacity-0', 'z-0');
        slides[index].classList.add('opacity-100', 'z-10');
      }
      
      // Update dots
      dots.forEach((dot, i) => {
        if (i === index) {
          dot.classList.remove('bg-white/50');
          dot.classList.add('bg-accent-amber', 'shadow-lg', 'scale-125');
        } else {
          dot.classList.remove('bg-accent-amber', 'shadow-lg', 'scale-125');
          dot.classList.add('bg-white/50');
        }
      });
      
      currentSlide = index;
    }

    function nextSlide() {
      const next = (currentSlide + 1) % slides.length;
      showSlide(next);
    }

    function prevSlide() {
      const prev = (currentSlide - 1 + slides.length) % slides.length;
      showSlide(prev);
    }

    function startAutoPlay() {
      if (isAutoPlaying) {
        autoPlayInterval = setInterval(nextSlide, 8000);
      }
    }

    function stopAutoPlay() {
      clearInterval(autoPlayInterval);
    }

    function resumeAutoPlay() {
      stopAutoPlay();
      setTimeout(startAutoPlay, 3000); // Resume after 3 seconds
    }

    // Event listeners
    nextButton?.addEventListener('click', () => {
      nextSlide();
      resumeAutoPlay();
    });

    prevButton?.addEventListener('click', () => {
      prevSlide();
      resumeAutoPlay();
    });

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showSlide(index);
        resumeAutoPlay();
      });
    });

    // Pause on hover
    container?.addEventListener('mouseenter', stopAutoPlay);
    container?.addEventListener('mouseleave', startAutoPlay);

    // Pause on focus (accessibility)
    container?.addEventListener('focusin', stopAutoPlay);
    container?.addEventListener('focusout', startAutoPlay);

    // Touch/swipe support
    let touchStartX = 0;
    let touchEndX = 0;

    container?.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
      stopAutoPlay();
    });

    container?.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
      resumeAutoPlay();
    });

    function handleSwipe() {
      const swipeThreshold = 50;
      const diff = touchStartX - touchEndX;
      
      if (Math.abs(diff) > swipeThreshold) {
        if (diff > 0) {
          nextSlide(); // Swipe left - next slide
        } else {
          prevSlide(); // Swipe right - previous slide
        }
      }
    }

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        prevSlide();
        resumeAutoPlay();
      } else if (e.key === 'ArrowRight') {
        nextSlide();
        resumeAutoPlay();
      }
    });

    // Start autoplay
    startAutoPlay();

    // Pause autoplay when page is not visible
    document.addEventListener('visibilitychange', () => {
      if (document.hidden) {
        isAutoPlaying = false;
        stopAutoPlay();
      } else {
        isAutoPlaying = true;
        startAutoPlay();
      }
    });
  });
</script>

<style>
  .carousel-slide {
    transition: opacity 1s ease-in-out;
  }
  
  .carousel-dot {
    transition: all 0.3s ease;
  }
  
  .carousel-dot:hover {
    transform: scale(1.1);
  }
</style>